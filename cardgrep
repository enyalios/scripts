#!/usr/bin/perl
#
# this script both updates your list of all magic cards and searches thru it
# for specific cards.  to update the info use 'cardgrep -u'.  to search, use
# 'cardgrep <regex1> <regex2>...'.  there is also a '-n' switch to just print
# out the card names without all their text.

use strict;
use warnings;
use Getopt::Std;

my $data_file = "$ENV{HOME}/magic/oracle";

$/ = "\n\n";
my $count = 0;
my %opts;
getopts('nu', \%opts);
my %cards;

if($opts{u}) {
    require LWP::Simple;
    print "updating card data...\n";
    my $data = LWP::Simple::get("http://ww2.wizards.com/gatherer/Index.aspx?output=Text+Spoiler");
    for($data) {
        s/^.*?\n<table class="TextResultsTable" border="0">\n//s;
        s/\n<\/table>.*?$//s;
        s/\r|<.*?>|&nbsp;//g;
        s/\xC3\x86/AE/g;
        s/oSi/S/g;
        s/^(CardName:|Cost:|Type:|Pow\/Tgh:|Rules Text:|Set\/Rarity:|(?!$))/sprintf "%-13.13s", $1/meg; 
    }
    open OUTPUT, ">$data_file" or 
        die "cant open output file '$data_file': $!\n";
    print OUTPUT $data;
    exit;
}

open INPUT, "<$data_file" or die "cant find input file\n";

CARD: while(<INPUT>) {
    for my $regex (@ARGV) {
        next CARD unless /$regex/im;
    }
    my ($card_name) = /^CardName: +(.*)$/m;
    next CARD if $cards{$card_name}++;
    if($opts{n}) { 
        print "$card_name\n" and next CARD;
    } else {
        1 while s/^(?=.{81})(.{0,80})( +.*)/$1\n              $2/m;
        print;
        $count++;
    }
}

close INPUT;

print "$count card(s) returned\n\n" unless $opts{n};
