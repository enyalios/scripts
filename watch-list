#!/bin/bash

pad() { perl -lpe 'END { $. && print }'; }

# prometheus alerts
echo -ne '\e[31m'
curl -ns 'https://status.enyalios.net/api/v1/alerts' | perl -MJSON -e '$tree = decode_json(<>); @alerts = @{$tree->{data}->{alerts}}; print $_->{annotations}->{summary}, "\n" for @alerts; print "\n" if @alerts'
echo -ne '\e[m'

# todo list
trello 'pauls todo' show | pad

# email
if [[ -e ~/.imapls ]]; then
    imapls -n 2>&1 | pad
else
    mdls
fi

# irc stuff
if [[ -e ~/.irssi ]]; then
    for i in ~/.irssi/logs/*/*.log; do cat $i | perl -e '
        undef $/;
        $_ = <>;
        s/[\s\S]*\n--- Log closed.*\n//;
        s/[\s\S]*\n\d+:\d+\s+\*!\* \| Irssi:.*?Total of \d+ nicks.*\n//;
        s/.*\*!\* \|.*\n//g;
        s/^--- Day changed.*\n//mg;
        s/[\s\S]*\n\d\d:\d\d\s+\@?enyalios\s+\|.*\n//;
        print;
        print "\n" if $_'
    done
fi

# aim stuff
#ssh zeta.enyalios.net bin/pork-info
if [[ -e ~/.pork ]]; then
    for i in ~/.pork/*/logs/*; do cat $i | perl -e 'undef $/; $_ = <>; s/[\s\S]*\n---------- Log ended on.*----------\n+(---------- Log started on .* ----------)?\n*//; s/[\s\S]*\n\[\d\d:\d\d:\d\d\] > .*\n//; print; print "\n" if $_'; done
fi

# jabber stuff
if [[ -e ~/.mcabber ]]; then
    for i in ~/.mcabber/histo/*; do name=`echo $i | perl -pe 's/^.*\///; s/\@.*$//'`; cat $i 2>/dev/null | perl -e 'undef $/; $_ = <>; s/[\s\S]*\n(M?S|MI .* 000 You have joined as |MR .* 000 <guder> ).*\n//; s/^MI .* 000 .* has (left|joined)\n//mg; print; print "\n" if $_' | perl -MPOSIX -ne "s/^M. /$name /; print unless /^cites-smg /; \$date = strftime \"%Y%m%d\", localtime; print if /cites-smg \$date/"; done
fi

# minecraft players
# if [[ -e ~/minecraft/logs/latest.log ]]; then
#     pgrep -f minecraft_server.jar >/dev/null || echo -e 'Minecraft server not running!\n'
#     cat ~/minecraft/logs/latest.log | perl -ne '
#     $active{$1} = 1
#         if(/^.*?\/INFO\]: (.*?) joined the game$/);
#     delete $active{$1}
#         if(/^.*?\/INFO\]: (.*?) left the game$/);
#     END {
#         if(%active) {
#             print "minecraft players:\n";
#             print "  $_\n" for sort keys %active;
#             print "\n";
#         }
#     }'
# fi

if [[ -e "$HOME/.twitch_client_id" ]]; then
    client_id=$(cat "$HOME/.twitch_client_id")
    twitch_user="endratic"
    twitch_list=$(GET "https://api.twitch.tv/kraken/users/$twitch_user/follows/channels?client_id=$client_id" | perl -MJSON -MData::Dumper -e 'undef $/; $tree = decode_json(<>); print join ",", map { $_->{channel}->{name} } @{$tree->{follows}}')
    streams=$(GET "https://api.twitch.tv/kraken/streams?client_id=$client_id&channel=$twitch_list" | perl -ne 'print "  $_\n" for /"url":"https:\/\/www.(twitch.tv\/.*?)"/g')
    [[ "$streams" != "" ]] && echo -e "Currently Streaming on TwitchTV:\n$streams\n"
fi

if [[ -S ~/.rtorrent.socket ]] && pgrep -x 'rtorrent main' > /dev/null; then
    #~/bin/rtorrent-status
    true
else
    echo -e 'rtorrent not running!\n'
fi
