#!/usr/bin/perl -w

use strict;

my $dev = $ARGV[0];
unless(length $dev) {
    my @lines = grep { ! /no wireless extensions/ } grep /^\w/, qx"/sbin/iwconfig 2>&1";
    ($dev) = split(" ", $lines[0]);
}

my $sudo = "";
$sudo = "/usr/bin/sudo" if $>;
my $output = `$sudo /sbin/iwlist $dev scan 2>&1`;
die "Too many APs, try running:\n  $sudo /sbin/iw dev $dev scan | /bin/grep '\\sSSID:' | sort | uniq -c | sort -rn\n"
  if $output =~ /Failed to read scan data : Argument list too long/;
my @data;

sub by_essid   { $a->{essid} cmp $b->{essid} || $b->{quality} <=> $a->{quality} }
sub by_quality { $b->{quality} <=> $a->{quality} || $a->{essid} cmp $b->{essid} }

my @access_points = split /\s*Cell \d+ - /, $output;
for(@access_points) {
    my ($address) = /^\s*Address: ([0-9A-F:]+)$/m;
    my ($essid)   = /^\s*ESSID:"(.*?)"$/m;
    my ($enc)     = /^\s*Encryption key:(\w*)$/m;
    my ($quality) = /^\s*Quality=(\d+)\/\d+0/m;
    next unless $address && $essid && $enc && $quality;
    push @data, { address => $address, quality => $quality, essid => $essid, enc => $enc };
}

for(sort by_quality @data) {
    printf "%3d %1s %-16s %s\n", $_->{quality}, ($_->{enc} eq "on")?"*":"", $_->{essid}, $_->{address}; 
}
