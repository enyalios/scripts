#!/usr/bin/perl
#
# this script will iterate over all of the movies in mythvideo that dont have
# their imdb number set and try to grab info off of imdb.  it uses the imdb
# helper script that comes with mythvideo to do all the dirty work.  just run
# this script and then wait a very long time in order to enjoy all the gooey
# metadata goodness.

use strict;
use warnings;
use DBI;
use LWP::Simple;

# variables for tweaking
my $imdb_script = "/usr/share/mythtv/mythvideo/scripts/imdb.pl";

# connect to the db and run the query
my $dbh = DBI->connect("DBI:mysql:database=mythconverg;host=localhost",
    "mythtv", "mythtv", {'RaiseError' => 1}) or die "couldnt connect to db\n";

# find the $poster_cache dir
my $rs = $dbh->prepare("select data from settings where value = 'VideoArtworkDir'");
$rs->execute();
my $poster_cache = $rs->fetchall_arrayref()->[0]->[0];
$rs->finish();
die "cant write to poster directory!\n" unless -w $poster_cache;

# find the $movie_path dir
$rs = $dbh->prepare("select data from settings where value = 'VideoStartupDir'");
$rs->execute();
my $movie_path = $rs->fetchall_arrayref()->[0]->[0] . "/movies";
$rs->finish();

# if the above 4 lines dont work for you just comment them out, set the
# variable correctly in the line below, and uncomment that
#my $movie_path = "/mnt/videos/movies/";

my $sth = $dbh->prepare("SELECT intid, title FROM videometadata WHERE 
                         filename like '$movie_path%' and inetref = 0");
$sth->execute();

# prepare the query for updating info
my $update_sql = $dbh->prepare("UPDATE videometadata SET
    title      = ?, year       = ?, director   = ?, 
    plot       = ?, userrating = ?, rating     = ?, 
    length     = ?, coverfile  = ?, inetref    = ? 
    WHERE intid = ?");

# iterate over all of the movie entries
while (my $ref = $sth->fetchrow_hashref()) {
    printf "%-30s ", $ref->{title};

    my $imdb_num;

    if( defined($ARGV[0]) &&  $ARGV[0] eq "-m"){
        print "> ";
        $imdb_num = <STDIN>;
        chomp $imdb_num;
    }
    else{
        # here we have to find the imdb number
        # first do a stupid lookup since imdb.pl fails if there is only 1 hit
        my $content = get("http://www.imdb.com/find?q=" . $ref->{title});
        $content =~ m!http://pro\.imdb\.com/title/tt(\d+)/!;
        $imdb_num = $1;
        # if there is more than 1 hit the above doesnt work so use imdb.pl
        unless($imdb_num) {
            $imdb_num = `$imdb_script -M "$ref->{title}"`;
            $imdb_num =~ s/:.*//s;
            $imdb_num =~ s/^(\d+).*/$1/;
        }
        print "$imdb_num\n";
    }
    next unless $imdb_num;

    # use the imdb script to find the metadata
    $_ = `$imdb_script -D $imdb_num`;
    my %data;
    /^(.*?):(.*)/, $data{$1} = $2 for(split "\n");
    $data{Cover} = "No Cover";

    # use the imdb script to lookup the image and then grab it
    my $img_url = `$imdb_script -P $imdb_num`;
    $img_url =~ s/\n.*//s;
    getstore($img_url, "$poster_cache/$imdb_num.jpg") if $img_url;
    $data{Cover} = "$poster_cache/$imdb_num.jpg" if -e "$poster_cache/$imdb_num.jpg";

    # run the sql query to update the info
    $update_sql->execute( @data{qw/Title Year Director Plot UserRating 
            MovieRating Runtime Cover/}, $imdb_num, $ref->{intid} );
}

# disconnect from the db
$sth->finish();
$dbh->disconnect();
