#!/usr/bin/perl

use strict;
use warnings;
use LWP::UserAgent;
use JSON;
use POSIX qw(strftime);
use Date::Parse;
use Getopt::Std;

my %opts;
getopts('d:hv', \%opts);
(my $progname = $0) =~ s/.*\///;

if($opts{h}) {
    print <<EOF;
  $progname - a script for printing out your exchange calendar

    -d days     number of days ahead to print
    -h          this help message
    -v          verbose output

EOF
    exit;
}

$opts{d} //= "7";
my $timezone = "America/Chicago";
my $access_token = `$ENV{HOME}/bin/cal_oath2.py $ENV{HOME}/.calendar.tokens`;
my $start = strftime("%FT%T%z", localtime(time));
my $end = strftime("%FT00:00:00%z", localtime(time + $opts{d}*24*60*60));
my $now = time;

my $ua = LWP::UserAgent->new;
my $r = HTTP::Request->new(GET => "https://graph.microsoft.com/v1.0/me/calendarView?\$select=subject,start,end,location&startDateTime=$start&endDateTime=$end&orderby=start/dateTime");
$r->header(Authorization => "Bearer $access_token");
$r->header(Prefer => "outlook.timezone=\"$timezone\"");
my $content = $ua->request($r)->{_content};

my $tree = decode_json $content;
#use Data::Dumper; print Dumper $tree;
printf "ERROR %s: %s\n", $tree->{error}->{code}, $tree->{error}->{message} if $tree->{error};
for(@{$tree->{value}}) {
    my $location = $_->{location}->{displayName};
    my $eventstart = str2time $_->{start}->{dateTime};
    $location =~ s/\bhttps:\/\/illinois\.zoom\.us\/[^\s;]*/Zoom/ unless $opts{v};
    printf "%s - %s %-28s %s\n",
    strftime("%a %b %d %R", localtime $eventstart),
    strftime("%R", localtime str2time $_->{end}->{dateTime}),
    $location,
    $_->{subject};
    if((($eventstart - $now) < 600) && !$opts{v} && $location eq "Zoom") {
        print "  ", $_->{location}->{displayName}, "\n";
    }

}

=cut
TODO:

- maybe make the verbose option print in a prettier multi-line format for each event and show the description
