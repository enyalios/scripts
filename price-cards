#!/usr/bin/perl

use strict;
use warnings;
use LWP::Simple;
use XML::Simple;
use Getopt::Std;

my $file = "$ENV{HOME}/magic/by_set.txt";
my %opts;
getopts("elw", \%opts);
# e - exact search
# l - lowest price only
my $search = join " ", @ARGV;

my %trans = (
    "Modern Masters 2015 Edition" => "Modern Masters 2015",
    "Modern Masters 2017 Edition" => "Modern Masters 2017",
    "Magic 2010" => "Magic 2010 (M10)",
    "Magic 2011" => "Magic 2011 (M11)",
    "Magic 2012" => "Magic 2012 (M12)",
    "Magic 2013" => "Magic 2013 (M13)",
    "Magic 2014 Core Set" => "Magic 2014 (M14)",
    "Magic 2015 Core Set" => "Magic 2015 (M15)",
    "Limited Edition Alpha" => "Alpha Edition",
    "Limited Edition Beta" => "Beta Edition",
    "Time Spiral \"Timeshifted\"" => "Timeshifted",
    "Prerelease Events" => "Prerelease Cards",
    "Launch Parties" => "Launch Party %26 Release Event Promos",
    "Release Events" => "Launch Party %26 Release Event Promos",
    "Planechase 2012 Edition" => "Planechase 2012",
    "Friday Night Magic" => "FNM Promos",
    "Media Inserts" => "Media Promos",
    "15th Anniversary" => "Media Promos",
    "Dragon Con" => "Media Promos",
    "Magic Game Day" => "Game Day Promos",
    "Seventh Edition" => "7th Edition",
    "Eighth Edition" => "8th Edition",
    "Ninth Edition" => "9th Edition",
    "Tenth Edition" => "10th Edition",
    "Judge Gift Program" => "Judge Promos",
    "International Collector's Edition" => "International Edition",
    "Deckmasters" => "Deckmasters Garfield vs Finkel",
    "Grand Prix" => "Grand Prix Promos",
    "Ravnica: City of Guilds" => "Ravnica",
    "Magic: The Gathering-Commander" => "Commander",
    "Duel Decks Anthology, Divine vs. Demonic" => "Duel Decks: Divine vs. Demonic",
    "Magic: The Gathering--Conspiracy" => "Conspiracy",
    "Commander 2013 Edition" => "Commander 2013",
    "Wizards Play Network" => "WPN %26 Gateway Promos",
    "Gateway" => "WPN %26 Gateway Promos",
    "Summer of Magic" => "WPN %26 Gateway Promos",
    "Super Series" => "JSS/MSS Promos",
    "Duel Decks Anthology, Jace vs. Chandra" => "Duel Decks: Anthology",
    "Duel Decks Anthology, Elves vs. Goblins" => "Duel Decks: Anthology",
    "Duel Decks Anthology, Garruk vs. Liliana" => "Duel Decks: Anthology",
    "From the Vault: Annihilation (2014)" => "From the Vault: Annihilation",
    "Coldsnap Theme Decks" => "Coldsnap Theme Deck Reprints",
    "Pro Tour" => "Pro Tour Promos",
    "Modern Event Deck 2014" => "Magic Modern Event Deck",
    "Arena League" => "Arena Promos",
    "Clash Pack" => "Unique and Miscellaneous Promos",
    "Worlds" => "Judge Promos",
    "World Magic Cup Qualifiers" => "WMCQ Promo Cards",
    "Two-Headed Giant Tournament" => "Arena Promos",
    "Happy Holidays" => "Special Occasion",
    "Champs and States" => "Champs Promos",
);

printf "%-34s  %-34s  %7s  %7s  %7s  %7s\n", qw"Card Set Avg Low High Foil" unless $opts{l};

open my $fh, "<$file" or die;

my $lowest;
while(<$fh>) {
    if($opts{e} || $opts{l}) {
        next unless /^\Q$search\E\|/mi;
    } else {
        next unless /\Q$search\E.*\|/i;
    }
    chomp;
    my ($name, $set) = split /\|/, $_, 2;
    $set = $trans{$set} if defined $trans{$set};
    my $extra = "";
    $extra .= " (IE)" if $set eq "International Edition";
    $extra .= " (CE)" if $set eq "Collector's Edition";
    if($set eq "Vanguard") {
        next if $name =~ / Avatar$/;
        $name .= " (Oversize)";
    }
    my $content = get "http://partner.tcgplayer.com/x3/phl.asmx/p?pk=GATHPRICE&s=$set&p=$name$extra";
    my $tree = XMLin $content;

    my $price = $tree->{product}->{avgprice};
    if(defined $price && $price != 0 && (!defined $lowest || $price < $lowest)) {
        $lowest = $price;
    }
    if(!$opts{l}) {
        printf "%-34s  %-34s  %7s  %7s  %7s  %7s\n",
            $name,
            $set,
            format_price($tree->{product}->{avgprice}),
            format_price($tree->{product}->{lowprice}),
            format_price($tree->{product}->{hiprice}),
            format_price($tree->{product}->{foilavgprice}),
    }
}

print "$search|$lowest\n" if $opts{l};
close $fh;

sub format_price {
    my $price = shift;
    return "?" unless defined $price;
    return "" if $price == 0;
    return sprintf "%.2f", $price;
}

=cut

TODO

see if mtgjson has a flag for not tournament legal cards
make translations for every set that is broken
make & work in set names (and escape other stuff)
make split cards work
filter the back of double face / flip cards out of magic/by_set.txt
no clue how to make cards with mult arts in the same set work
