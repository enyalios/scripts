#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Std;

my %opts;
getopts('uf', \%opts);
my $type = $opts{f}?"-foils":"";

if($opts{u}) {
    require LWP::Simple;
    print "updating price data...\n" if -t STDOUT;

    for("", "-foils") {
        my $data = LWP::Simple::get("http://magictraders.com/cgi-bin/query.cgi?list=magic$_&target=.&field=0&operator=re");
        $data =~ s/^.*<PRE>\n//s;
        $data =~ s/\n *<\/PRE>\n.*$//s;
        open(OUTPUT, ">$ENV{HOME}/magic/prices$_") or die "couldnt open output file\n";
        print OUTPUT $data;
        close OUTPUT;
    }

    exit;
}

open(FILE, "<$ENV{HOME}/magic/prices$type") or die "couldnt open prices file\n";
my @prices = <FILE>;

if(@ARGV) { # they gave us arguments to search for
    # print out magic traders prices
    LINE: for(@prices) {
        for my $regex (@ARGV) { next LINE unless /$regex/i; }
        print;
    }

    # fetch and print cardshark prices
    require LWP::UserAgent;
    my $ua = LWP::UserAgent->new; 
    sub get { $ua->get($_[0])->{_content}; }
    my $page = &get("http://cardshark.com/Search.aspx?qu=" . join(' ', @ARGV));
    if($page =~ /CardShark\.com - Search for cards/) { # multiple results
        while($page =~  m!<a href="/Magic-the-Gathering/.*?">(.*?)</a></font></td><td><font color="Black"><a href="/Buy/Magic-the-Gathering/Find-Cards/.*?">(.*?)</a></font></td><td><font color="Black">.*?</font></td><td><font color="Black">.*?</font></td><td><font color="Black">(.*?)</font>!ig) {
            my ($name, $set, $price) = ($1, $2, $3);
            $price = "??" if $price eq "&nbsp;";
            printf "%-30s %-30s %6s\n", $name, $set, $price;
        }
    } else { # returned a single card page
        my ($name, $set) = ($page =~ m!<span id="[^"]*_lblCardName" class="heading">(.*?)</span>.*?<span id="[^"]*_lblCardSet">(.*?)</span>!s);
        my ($price) = ($page =~ m!<tr class="tableViewRow" valign="top">\s*<td>(?:<font color="Black">)?\$([\d.]+)(?:</font>)?</td>!);
        $price = "??" if $price eq "&nbsp;";
        printf "%-30s %-30s %6s\n", $name, $set, $price;
    }
} else { # no arguments, match cards on stdin
    while(<>) {
        chomp(my $card = $_);
        print grep { /^$card(,| \(.{1,4}\))/i } @prices;
    }
}
