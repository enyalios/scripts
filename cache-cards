#!/usr/bin/perl
# 
# this script is used to download card images from wizards.com's website.  you
# can either specify the names of cards or the command line, or a file ending
# in .dec with cardnames in it.
#
# use the '-d' switch to display all the card images after downloading them.
# this works especially well with the cardgrep script like so:
#   cardgrep -n 'regex' | perl -pe 's/\n/\0/' | xargs -0 cache-cards -d

use warnings;
use strict;
use Getopt::Std;

# global vars
my @file_list;
my %opts;
$opts{c} = "$ENV{HOME}/.mindlesscache";

# this fuction takes a card name as an arg and get the image for us
sub get_card {
    # somebody set us up the variables
    my $card = shift;
    $card =~ s/\x{C6}/ae/g;
    my $simple_card = $card;
    $simple_card =~ y/A-Z -/a-z__/;
    $simple_card =~ y/a-z_//cd;
    $card =~ y/ /_/ if $card =~ /,/;
    $card =~ s! // .*$!!;

    print "$card\n" if $opts{v};
    
    # we already have this cached
    if(-e "$opts{c}/$simple_card.jpg") { 
        print "   Skipping card '$card'\n";
        print "\n" if $opts{v};
        push @file_list, "$opts{c}/$simple_card.jpg";
        return;
    }

    # figure out where the card image is and grab it
    my $html = `wget -qO - "http://gatherer.wizards.com/gathererlookup.asp?name=$card"`;
    my ($url) = $html =~ /<img ID="_imgCardImage"  src="(.*?)"/;
    unless($url) { print "=> Couldn't find card '$card'\n"; return; }
    print "   URL: $url\n" if $opts{v};
    print "   Getting card '$card'\n" unless $opts{v};
    if(system("wget", "-q", "-O", "$opts{c}/$simple_card.jpg", $url)) {
        print "=> Problem getting card '$card'\n";
    } else {
        push @file_list, "$opts{c}/$simple_card.jpg";
    }
    print "\n" if $opts{v};
}

# prints out our nice usage message
sub usage_bail {
    print <<EOF;

  Usage:
    cache-cards [options] (card_name|deck_list.dec) ...

  Options:
    -c cache_dir    use alternate cache directory
    -d              display all the cards when finished
    -h              print this help message
    -v              be more verbose

EOF
    exit;
}

# initialization stuff
getopts('dc:vh', \%opts);
usage_bail() if(!@ARGV || $opts{h});
mkdir $opts{c} unless -d $opts{c};

# iterate over all the command line arguments
for(@ARGV) {
    if(/\.dec$/i) {
        open(FILE, "$_") or die "=> Couldn't open decklist '$_': $!\n";
        my @lines = <FILE>;
        close FILE;
        for(@lines) { 
            chomp;
            next if /^\s*(\/\/|#|$)/;
            s/^\s*(?:sb:)?\s*(?:\d+\s+)?(.+?)\s*$/$1/i;
            get_card($_) if $_;
        }
    } else {
        get_card($_);
    }
}

# do the displaying at the end if necessary
system("xv", "-geometry", "+0+0", @file_list) if $opts{d};
